# This code was coded and generated by Hasnain Amir
# Contact: hasnain-amir@outlook.com
# GitHub: github.com/hasnain-amir

from fpdf import FPDF

# Define constants for styling
TITLE_FONT_SIZE = 14
SECTION_TITLE_FONT_SIZE = 12
TEXT_FONT_SIZE = 11
LINE_HEIGHT = 8
MARGIN = 10
INDENTATION = 10
AUTHOR_TEXT = "This was coded and generated using Python by Hasnain Amir!"

class PDFGenerator:
    def __init__(self, filename="CV.pdf"):
        """Initialize the PDFGenerator with the specified filename."""
        self.pdf = FPDF()
        self.pdf.set_auto_page_break(auto=True, margin=MARGIN)
        self.filename = filename

    def add_author_text(self):
        """Add author text to the CV."""
        self.pdf.set_y(250)  # Position at the bottom
        self.pdf.set_font("Arial", 'I', TEXT_FONT_SIZE)  # Italic font for the author text
        self.pdf.cell(0, LINE_HEIGHT, AUTHOR_TEXT, ln=True, align='C')

    def add_title(self, name, location, contact_info):
        """Add the main title section with name, location, and contact details."""
        self.pdf.add_page()
        self.pdf.set_font("Arial", 'B', TITLE_FONT_SIZE)
        self.pdf.cell(0, LINE_HEIGHT, name, ln=True, align='C')
        self.pdf.set_font("Arial", '', TEXT_FONT_SIZE)
        self.pdf.cell(0, LINE_HEIGHT, location, ln=True, align='C')
        self.pdf.multi_cell(0, LINE_HEIGHT, contact_info, align='C')
        self.pdf.ln(LINE_HEIGHT)

    def add_section_title(self, title):
        """Add section titles (e.g., 'Professional Summary', 'Key Skills')."""
        self.pdf.set_font("Arial", 'B', SECTION_TITLE_FONT_SIZE)
        self.pdf.cell(0, LINE_HEIGHT, title, ln=True)
        self.pdf.ln(3)

    def add_text(self, text):
        """Add a block of text."""
        self.pdf.set_font("Arial", '', TEXT_FONT_SIZE)
        self.pdf.multi_cell(0, LINE_HEIGHT, text)
        self.pdf.ln(3)

    def add_list(self, items):
        """Add a list of items with indentation for bullet points."""
        self.pdf.set_font("Arial", '', TEXT_FONT_SIZE)
        for item in items:
            if item.startswith("-"):  # Check if item is a bullet point
                self.pdf.set_x(self.pdf.get_x() + INDENTATION)  # Indent bullet points
            self.pdf.multi_cell(0, LINE_HEIGHT, item, align='L', border=0)
            self.pdf.set_x(self.pdf.get_x())  # Reset position after bullet point
        self.pdf.ln(3)

    def generate(self):
        """Generate and save the CV, including the author text on the last page."""
        self.add_author_text()  # Add author text to the CV
        self.pdf.output(self.filename)

def create_cv():
    """Create the CV PDF."""
    pdf_gen = PDFGenerator()

    # Personal details
    name = "Your Name"
    location = "Location, UK"
    contact_info = (
        "Email: your-name@outlook.com | Phone: 012345678\n"
        "LinkedIn: linkedin.com/in/yourname | GitHub: github.com/your-name"
    )

    # Add title section
    pdf_gen.add_title(name, location, contact_info)

    # Professional Summary
    pdf_gen.add_section_title('Professional Summary')
    summary_text = (
        "Detail-oriented professional with a strong academic background in business, sociology, "
        "and sports analysis. Skilled in data analytics, graphic design, and business management. "
        "Currently pursuing the Google Data Analytics Professional Certificate and eager to apply "
        "analytical skills in a data-driven role within the IT industry."
    )
    pdf_gen.add_text(summary_text)

    # Key Skills
    pdf_gen.add_section_title('Key Skills')
    skills = [
        "Data Analytics & Technology:",
        "- Proficient in data analysis and visualization tools (Google Sheets, SQL, Tableau, Excel).",
        "- Experienced in data cleaning, organization, and exploratory analysis.",
        "- Strong analytical and problem-solving skills.",
        "",
        "Research & Critical Thinking:",
        "- Conducts thorough research and analyzes qualitative and quantitative data.",
        "- Evaluates complex information and draws logical conclusions.",
        "",
        "Customer Service & Teamwork:",
        "- Developed customer service skills working at KFC.",
        "- Effective in high-pressure environments, ensuring customer satisfaction.",
        "",
        "Business & Management:",
        "- Managed an eBay business, handling inventory and customer relations.",
        "- Understands business operations and management.",
        "",
        "Communication & Language Skills:",
        "- Fluent in English and Urdu; strong presentation skills."
    ]
    pdf_gen.add_list(skills)

    # Professional Experience
    pdf_gen.add_section_title('Professional Experience')
    experience = [
        "Role Name, Company Name, Location, UK | Dec 2022 - Dec 2023",
        "- Provided excellent customer service in a fast-paced environment.",
        "- Collaborated with team members to ensure smooth operations.",
        "",
        "Role Name, Company Name, Location, UK | Jan 2019 - Sep 2022",
        "- Created marketing materials and branding concepts for clients.",
        "- Managed multiple projects, meeting deadlines consistently.",
        "",
        "Role Name, Company Name, Location, UK | Jan 2019 - Present",
        "- Managed product listings, inventory, and customer communications.",
        "- Implemented strategies to increase sales and satisfaction."
    ]
    pdf_gen.add_list(experience)

    # Education & Certifications
    pdf_gen.add_section_title('Education & Certifications')
    education = [
        "Google Data Analytics Professional Certificate | In Progress",
        "- Skills in data cleaning, analysis, and visualization.",
        "",
        "A Levels | School Name, Location, UK",
        "- Subjects/grades",
        "",
        "GCSEs | School Name, Location, UK",
        "- Subjects/grades,",
        "- Subjects/grades"
    ]
    pdf_gen.add_list(education)

    # Additional Information
    pdf_gen.add_section_title('Additional Information')
    additional_info = [
        "- Languages: Fluent in English and.",
        "- Interests: ",
        "",
        "References available upon request."
    ]
    pdf_gen.add_list(additional_info)

    # Generate the CV PDF
    pdf_gen.generate()

if __name__ == "__main__":
    create_cv()
